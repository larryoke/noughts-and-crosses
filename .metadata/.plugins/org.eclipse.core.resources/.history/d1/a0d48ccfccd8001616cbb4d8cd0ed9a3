package gameClient;

import org.apache.http.client.HttpClient;
import org.apache.http.client.config.RequestConfig;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
import org.springframework.context.annotation.Bean;
import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;
import org.springframework.web.client.RestTemplate;

public class BaseGameClientApplication {

    private static int CONNECTION_TIMEOUT = 5000;

    @Bean
    public PoolingHttpClientConnectionManager poolingHttpClientConnectionManager() {
	PoolingHttpClientConnectionManager result = new PoolingHttpClientConnectionManager();
	result.setMaxTotal(20);
	return result;
    }

    @Bean
    public RequestConfig requestConfig() {
	RequestConfig result = RequestConfig.custom().setConnectionRequestTimeout(CONNECTION_TIMEOUT).setConnectTimeout(CONNECTION_TIMEOUT)
		.setSocketTimeout(CONNECTION_TIMEOUT).build();
	return result;
    }

    @Bean
    public CloseableHttpClient httpClient(PoolingHttpClientConnectionManager poolingHttpClientConnectionManager,
	    RequestConfig requestConfig) {
	CloseableHttpClient result = HttpClientBuilder.create().setConnectionManager(poolingHttpClientConnectionManager)
		.setDefaultRequestConfig(requestConfig).build();
	return result;
    }

    @Bean
    public RestTemplate restTemplate(HttpClient httpClient) {
	HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory();
	requestFactory.setHttpClient(httpClient);
	return new RestTemplate(requestFactory);
    }
}
